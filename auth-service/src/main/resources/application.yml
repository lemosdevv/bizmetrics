# =========================
# Perfil padrão (dev/local)
# =========================
server:
  port: 8081
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

spring:
  application:
    name: kpi-service

  jackson:
    # Garante datas corretas para o Brasil
    time-zone: America/Sao_Paulo

  datasource:
    # Use variáveis de ambiente para não expor segredos em produção
    url: ${DB_URL:jdbc:mysql://localhost:3306/bizmetrics_auth?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=America/Sao_Paulo}
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:22012005}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      pool-name: hikari-kpi
      minimum-idle: ${DB_MIN_IDLE:5}
      maximum-pool-size: ${DB_MAX_POOL_SIZE:20}
      idle-timeout: ${DB_IDLE_TIMEOUT_MS:600000}      # 10m
      connection-timeout: ${DB_CONN_TIMEOUT_MS:30000} # 30s
      max-lifetime: ${DB_MAX_LIFETIME_MS:1800000}     # 30m
      validation-timeout: 5000

  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}  # update (dev) | validate | none (prod)
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQL8Dialect
        jdbc:
          time_zone: America/Sao_Paulo

  cache:
    type: caffeine

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:kpi-service}
      auto-offset-reset: latest
      properties:
        isolation.level: read_committed
    producer:
      acks: all
      retries: 5
      properties:
        enable.idempotence: true
      transaction-id-prefix: kpi-tx-

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,env,threaddump,httpexchanges
  endpoint:
    health:
      show-details: when_authorized
  observations:
    annotations:
      enabled: true

# Logs úteis para dev (SQL + Binder) e MDC com correlation-id
logging:
  level:
    root: INFO
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.apache.kafka: INFO
  pattern:
    level: "%5p [corr=%X{correlationId}]"

# =========================
# Configurações da aplicação
# (mapeadas por @ConfigurationProperties)
# =========================
app:
  name: KPI Monitoring
  version: 1.0.0
  environment: dev

  # CORS centralizado (usado pelo WebConfig)
  cors:
    allowed-origins: ["http://localhost:3000", "http://localhost:8080"]
    allowed-methods: ["GET", "POST", "PUT", "PATCH", "DELETE", "OPTIONS"]
    allowed-headers: ["Authorization", "Content-Type", "X-Requested-With", "X-Correlation-Id"]
    exposed-headers: ["X-Correlation-Id"]
    allow-credentials: true
    max-age: 3600

  # Cache Caffeine (ajuste por serviço: catálogos, lookups etc.)
  cache:
    spec: "maximumSize=20000,expireAfterWrite=10m,recordStats"

  # Thread pools para @Async e Scheduler
  async:
    core-pool-size: ${ASYNC_CORE_POOL_SIZE:4}
    max-pool-size: ${ASYNC_MAX_POOL_SIZE:16}
    queue-capacity: ${ASYNC_QUEUE_CAPACITY:200}
    scheduler-pool-size: ${SCHEDULER_POOL_SIZE:4}

  # Segurança flexível: NONE | BASIC | JWT
  security:
    mode: ${SECURITY_MODE:NONE}
    # BASIC (somente para ambiente interno)
    basic-username: ${BASIC_USER:admin}
    basic-password: ${BASIC_PASS:{noop}admin}
    # JWT (produção): use JWK do seu IdP (Keycloak, Entra ID, Auth0) ou segredo HS256 para dev
    jwt-jwk-set-uri: ${JWT_JWK_SET_URI:}
    jwt-secret: ${JWT_SECRET:}
    expected-audience: ${JWT_EXPECTED_AUD:}
    permit-all:
      - /actuator/health
      - /actuator/info
      - /v3/api-docs/**
      - /swagger-ui.html
      - /swagger-ui/**

  # Kafka: criação de tópicos, DLT, concorrência
  kafka:
    auto-create-topics: ${KAFKA_AUTO_CREATE_TOPICS:true}
    dlt-suffix: ".DLT"
    concurrency: ${KAFKA_CONCURRENCY:3}
    topics:
      kpi.events.ingest:
        partitions: 3
        replication-factor: 1
      kpi.events.alerts:
        partitions: 3
        replication-factor: 1

# =========================
# Springdoc / Swagger UI
# =========================
springdoc:
  swagger-ui:
    path: /swagger-ui.html
  api-docs:
    path: /v3/api-docs

---
# =========================
# Perfil de produção (prod)
# Ativar com: SPRING_PROFILES_ACTIVE=prod
# =========================
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:none}  # Em prod, prefira migrações (Flyway/Liquibase)
    show-sql: ${JPA_SHOW_SQL:false}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP:kpi-service}
    producer:
      acks: all
      retries: 10

server:
  port: ${PORT:8080}

logging:
  level:
    root: INFO
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
    org.apache.kafka: INFO

app:
  environment: prod
  security:
    mode: ${SECURITY_MODE:JWT}
    jwt-jwk-set-uri: ${JWT_JWK_SET_URI:}
    jwt-secret: ${JWT_SECRET:}
  cors:
    # Ajuste conforme seu domínio frontend em produção
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://app.suaempresa.com.br}
